{"version":3,"sources":["model/routing/constants.ts","screens/AddPlayers/model/events.ts","libs/getUniqueId.ts","model/players/events.ts","shared/roles.ts","model/players/stores.ts","shared/config.ts","model/routing/events.ts","model/routing/stores.ts","screens/AddPlayers/model/stores.ts","screens/AddPlayers/PlayersForm/PlayerField.tsx","screens/AddPlayers/PlayersForm/AddPlayersStep.tsx","screens/AddPlayers/PlayersForm/ChooseMasterStep.tsx","screens/AddPlayers/PlayersForm/FinishStep.tsx","screens/AddPlayers/PlayersForm/PlayersForm.tsx","screens/AddPlayers/index.tsx","components/Countdown/Countdown.tsx","components/DisplaySecret/DisplaySecret.tsx","components/Card/Card.tsx","screens/ShowRoles/RoleCard/RoleCard.tsx","screens/ShowRoles/model/events.ts","model/game/events.ts","shared/markerTypes.ts","model/game/stores.ts","screens/ShowRoles/model/stores.ts","screens/ShowRoles/index.tsx","screens/ShowWord/model/events.ts","screens/ShowWord/model/stores.ts","screens/ShowWord/index.tsx","components/WordsList/WordsList.tsx","screens/ChooseWord/model/events.ts","screens/ChooseWord/index.tsx","libs/getRandomElements.ts","components/Icons/svg/question.svg","components/Icons/QuestionIcon.tsx","components/Marker/Marker.tsx","components/MarkersList/MarkersList.tsx","components/PlayerCard/PlayerCard.tsx","libs/useHover.ts","screens/GameBoard/model/stores.ts","screens/GameBoard/model/events.ts","screens/GameBoard/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ScreensEnum","getPlayerId","prefix","index","id","getUniqueId","getNewPlayerData","name","nextStepRequest","createEvent","nextStep","prevStepRequest","prevStep","submitForm","changeMaster","addPlayer","addedPlayer","map","deletePlayer","editPlayer","savePlayers","roles","roleNames","$byId","createStore","on","_","byId","ids","master","playersNum","rolesMap","push","i","length","shuffle","generateRoles","mapValues","player","role","pop","$ids","$players","combine","setScreen","nextScreenRequest","nextScreen","$currentScreenIndex","state","screen","guard","source","filter","Object","keys","target","steps","forward","from","to","$activeStep","activeStep","$master","initialPlayer","$playersById","omit","prevData","$playersIds","idForDelete","$formError","sample","clock","fn","players","some","trim","formError","PlayerField","onDelete","onChange","onEnter","data","cannotDelete","Box","display","width","alignItems","flexGrow","flexShrink","mr","TextField","value","label","variant","onKeyDown","key","fullWidth","autoFocus","IconButton","onClick","disabled","AddPlayersStep","useStore","mb","ind","isLast","justifyContent","Button","color","size","startIcon","ChooseMasterStep","RadioGroup","FormControlLabel","control","Radio","FinishStep","classes","useStyles","List","isMaster","namesFirstLetter","ListItem","disableGutters","ListItemAvatar","Avatar","className","cx","masterAvatar","toUpperCase","ListItemText","primary","secondary","makeStyles","backgroundColor","green","PlayersForm","error","isFirstStep","isLastStep","Paper","Stepper","labelProps","optional","Typography","Step","StepLabel","pb","px","Divider","py","currentTarget","blur","AddPlayers","Grid","justify","container","item","xs","Countdown","count","step","onFinish","rest","useState","remained","setRemained","remainedRef","useRef","current","useEffect","timer","setInterval","newRemained","clearInterval","DisplaySecret","title","onHideSecret","children","isSecretVisible","setIsSecretVisible","isCountdownVisible","setIsCountdownVisible","handleChangeState","useCallback","hadleKeyDown","e","preventDefault","window","removeEventListener","addEventListener","Backdrop","root","open","height","position","Container","flexDirection","textAlign","component","gutterBottom","bottom","left","p","theme","zIndex","modal","Card","text","textTransform","RoleCard","useTheme","red","palette","grey","getColorsMap","changePlayerRequest","playerChanged","setWord","giveMarkerToPlayerRequest","markerGivenToPlayer","minusRemainedMarker","startNewGame","markerTypes","markerNames","$word","word","initialRemainedMarkers","$remainedMarkers","type","newVal","markerType","getState","$markersByPlayer","playerId","playerMarkers","markerCount","$currentPlayerIndex","$playersLength","$currentPlayer","ShowRoles","changeIndexRequest","indexChanged","$showToIndex","showTo","$showTo","ShowWord","fontWeight","toLowerCase","colors","lightBlue","purple","pink","deepOrange","indigo","c","colorsNum","WordsList","words","onChooseWord","GridList","cols","GridListTile","bgcolor","ButtonBase","fontSize","letterSpacing","styled","ChooseWord","arr","n","result","len","taken","Array","RangeError","x","Math","floor","random","getRandomElements","dictionary","_extends","assign","arguments","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","d","fillRule","fill","_ref","svgRef","props","viewBox","shapeRendering","textRendering","imageRendering","clipRule","ref","ForwardRef","forwardRef","QuestionIcon","SvgIcon","QuestionIconSvg","markerSizeMap","l","md","sm","iconSizeMap","MarkerBase","Icon","iconComponent","iconColor","button","bgColor","hoverColor","markerSize","iconSize","borderRadius","boxShadow","markersMap","CheckIcon","success","light","main","CloseIcon","info","ThumbDownIcon","warning","dark","ThumbUpIcon","StarIcon","yellow","Marker","MarkerComponent","transition","MarkersList","markerShift","flexWrap","pl","ml","PlayerCard","markers","onAddMarker","availableMarkers","isHovered","setIsHovered","handlers","onMouseEnter","onMouseLeave","useHover","hasMarkers","Root","ActionsWrapper","isVisible","spacing","div","$availableMarkers","remainedMarkers","reduce","acc","$playersList","markersByPlayer","$remainedAnswersNum","yes","onStartNewGame","prepend","addPlayers","GameBoard","remainedAnswersNum","mt","App","currentScreen","isAddPlayers","showRoles","isChooseWord","chooseWord","my","showWord","Boolean","location","hostname","match","createMuiTheme","ReactDOM","render","StrictMode","StylesProvider","injectFirst","CssBaseline","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.1d77ec64.chunk.js","sourcesContent":["export enum ScreensEnum {\n  addPlayers,\n  showRoles,\n  chooseWord,\n  showWord,\n  gameBoard,\n}\n\nexport type ScreenName = keyof typeof ScreensEnum;\n","import { createEvent } from \"effector\";\n\nimport { getUniqueId } from \"libs/getUniqueId\";\n\nimport { PlayerData } from \"./types\";\n\nconst getPlayerId = getUniqueId(\"player\");\n\nexport const getNewPlayerData = (): PlayerData => {\n  const id = getPlayerId();\n  return { id, name: \"\" };\n};\n\nexport const nextStepRequest = createEvent(\"next step request\");\nexport const nextStep = createEvent(\"next step\");\nexport const prevStepRequest = createEvent(\"prev step request\");\nexport const prevStep = createEvent(\"prev step\");\nexport const submitForm = createEvent(\"submit form\");\n\nexport const changeMaster = createEvent<string>(\"change master\");\n\nexport const addPlayer = createEvent(\"add player\");\nexport const addedPlayer = addPlayer.map<PlayerData>(() => getNewPlayerData());\nexport const deletePlayer = createEvent<string>(\"delete player\");\nexport const editPlayer = createEvent<{ id: string } & Partial<PlayerData>>(\n  \"edit player\"\n);\n","export const getUniqueId = (prefix: string) => {\n  let index = 0;\n\n  return () => {\n    const id = `${prefix}-${index}`;\n    index += 1;\n\n    return id;\n  };\n};\n","import { createEvent } from \"effector\";\n\nimport { MarkerType } from \"shared/markerTypes\";\n\nimport { PlayerBaseInformation, Ids } from \"./types\";\n\nexport const savePlayers = createEvent<{\n  byId: { [id: string]: PlayerBaseInformation };\n  ids: Ids;\n  master: string;\n}>(\"save players\");\n\nexport const addMarker = createEvent<{\n  markerType: MarkerType;\n  playerId: string;\n}>(\"add marker\");\n","import { ValuesType } from \"utility-types\";\n\nexport const roles = {\n  traitor: \"traitor\",\n  helper: \"helper\",\n  regular: \"regular\",\n} as const;\n\nexport const roleNames = {\n  [roles.traitor]: \"Предатель\",\n  [roles.helper]: \"Помощник\",\n  [roles.regular]: \"Обычный\",\n};\n\nexport type Role = ValuesType<typeof roles>;\n","import { createStore, combine } from \"effector\";\nimport mapValues from \"lodash/mapValues\";\nimport shuffle from \"lodash/shuffle\";\n\nimport { Role, roles as rolesMap } from \"shared/roles\";\nimport { PLAYERS_NUM_FOR_SECOND_TRAITOR } from \"shared/config\";\n\nimport { ById, Ids, Player } from \"./types\";\nimport { savePlayers } from \"./events\";\n\nconst generateRoles = (playersNum: number) => {\n  const roles: Role[] = [rolesMap.traitor, rolesMap.helper];\n\n  if (playersNum > PLAYERS_NUM_FOR_SECOND_TRAITOR) {\n    roles.push(rolesMap.traitor);\n  }\n\n  for (let i = roles.length; i < playersNum; i += 1) {\n    roles.push(rolesMap.regular);\n  }\n\n  return shuffle(roles);\n};\n\nexport const $byId = createStore<ById>({}).on(\n  savePlayers,\n  (_, { byId, ids, master }) => {\n    const roles = generateRoles(ids.length);\n\n    return mapValues(\n      byId,\n      (player): Player => ({\n        ...player,\n        master: master === player.id,\n        role: roles.pop() as Role,\n      })\n    );\n  }\n);\n\nexport const $ids = createStore<Ids>([]).on(savePlayers, (_, { ids }) => ids);\n\nexport const $players = combine($byId, $ids, (byId, ids) =>\n  ids.map((id) => byId[id])\n);\n","export const MIN_PLAYERS = 1;\nexport const WORDS_FOR_CHOOSING = 6;\nexport const MAYBE_MARKERS = 30;\nexport const YES_NO_MARKERS = 30;\nexport const SO_CLOSE_FAR_MARKERS = 1;\nexport const PLAYERS_NUM_FOR_SECOND_TRAITOR = 8;\n","import { createEvent } from \"effector\";\n\nimport { ScreenName } from \"./constants\";\n\nexport const setScreen = createEvent<ScreenName | number>(\"set screen\");\nexport const nextScreenRequest = createEvent(\"next screen request\");\nexport const nextScreen = createEvent(\"next screen\");\n","import { createStore, guard } from \"effector\";\n\nimport { ScreensEnum, ScreenName } from \"./constants\";\nimport { nextScreenRequest, nextScreen, setScreen } from \"./events\";\n\nexport const $currentScreenIndex = createStore(0)\n  .on(nextScreen, (index) => index + 1)\n  .on(setScreen, (state, screen) =>\n    typeof screen === \"string\" ? ScreensEnum[screen] : screen\n  );\n\nguard({\n  source: nextScreenRequest,\n  filter: $currentScreenIndex.map(\n    (index) => index < Object.keys(ScreensEnum).length - 1\n  ),\n  target: nextScreen,\n});\n\nexport const $currentScreen = $currentScreenIndex.map(\n  (index) => ScreensEnum[index] as ScreenName\n);\n","import { createStore, combine, guard, sample, forward } from \"effector\";\nimport omit from \"lodash/omit\";\n\nimport { MIN_PLAYERS } from \"shared/config\";\nimport { savePlayers } from \"model/players\";\nimport { nextScreenRequest } from \"model/routing\";\n\nimport {\n  nextStepRequest,\n  nextStep,\n  prevStepRequest,\n  prevStep,\n  changeMaster,\n  addedPlayer,\n  deletePlayer,\n  editPlayer,\n  getNewPlayerData,\n  submitForm,\n} from \"./events\";\nimport { ById } from \"./types\";\n\nexport const steps = [\"Добавьте игроков\", \"Выберите ведущего\", \"Проверьте\"];\n\nforward({\n  from: prevStepRequest,\n  to: prevStep,\n});\n\nexport const $activeStep = createStore(0)\n  .on(nextStep, (activeStep) => {\n    const newStep = activeStep + 1;\n\n    if (newStep >= steps.length) {\n      return activeStep;\n    }\n\n    return activeStep + 1;\n  })\n  .on(prevStep, (activeStep) => {\n    if (activeStep === 0) {\n      return activeStep;\n    }\n    return activeStep - 1;\n  });\n\nexport const $master = createStore(\"\").on(changeMaster, (_, master) => master);\n\nconst initialPlayer = getNewPlayerData();\n\nconst $playersById = createStore<ById>({\n  [initialPlayer.id]: initialPlayer,\n})\n  .on(addedPlayer, (state, player) => {\n    return { ...state, [player.id]: player };\n  })\n  .on(deletePlayer, (state, id) => omit(state, id))\n  .on(editPlayer, (state, player) => {\n    const prevData = state[player.id];\n    return {\n      ...state,\n      [player.id]: {\n        ...prevData,\n        ...player,\n      },\n    };\n  });\n\nconst $playersIds = createStore<string[]>([initialPlayer.id])\n  .on(addedPlayer, (state, player) => [...state, player.id])\n  .on(deletePlayer, (state, idForDelete) =>\n    state.filter((id) => id !== idForDelete)\n  );\n\nexport const $players = combine($playersById, $playersIds, (byId, ids) =>\n  ids.map((id) => byId[id])\n);\n\nexport const $formError = createStore<null | string>(null);\n\nsample({\n  source: [$activeStep, $master, $players],\n  clock: nextStepRequest,\n  fn: ([activeStep, master, players]) => {\n    if (activeStep === 0) {\n      if (players.length < MIN_PLAYERS) {\n        return `Должно быть не менее ${MIN_PLAYERS} игроков`;\n      }\n\n      if (players.some(({ name }) => !name.trim().length)) {\n        return \"Заполните все поля\";\n      }\n    }\n\n    if (activeStep === 1) {\n      if (!master) {\n        return \"Выберите ведущего\";\n      }\n    }\n\n    return null;\n  },\n  target: $formError,\n});\n\nguard({\n  source: nextStepRequest,\n  filter: $activeStep.map((activeStep) => activeStep === steps.length - 1),\n  target: submitForm,\n});\n\nguard({\n  source: nextStepRequest,\n  filter: $formError.map((formError) => !formError),\n  target: nextStep,\n});\n\nsample({\n  source: [$playersById, $playersIds, $master],\n  clock: submitForm,\n  fn: ([byId, ids, master]) => ({\n    ids: [...ids],\n    byId: {\n      ...byId,\n    },\n    master,\n  }),\n  target: savePlayers,\n});\n\nforward({\n  from: submitForm,\n  to: nextScreenRequest,\n});\n","import React, { ChangeEvent, KeyboardEvent } from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from \"@material-ui/core/TextField\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nimport { PlayerData } from \"../model/types\";\n\ntype PlayerFieldProps = {\n  onDelete: (id: string) => void;\n  onChange: (data: PlayerData) => void;\n  onEnter: () => void;\n  cannotDelete: boolean;\n  data: PlayerData;\n};\n\nexport const PlayerField = ({\n  onDelete,\n  onChange,\n  onEnter,\n  data,\n  cannotDelete,\n}: PlayerFieldProps) => {\n  const handleChangeName = ({\n    target: { value },\n  }: ChangeEvent<HTMLInputElement>) => {\n    onChange({ ...data, name: value });\n  };\n\n  const handleKeyDown = ({ key }: KeyboardEvent) => {\n    if (key !== \"Enter\") {\n      return;\n    }\n\n    onEnter();\n  };\n\n  return (\n    <Box display=\"flex\" width={1} alignItems=\"center\">\n      <Box flexGrow={1} flexShrink={1} mr=\"4px\">\n        <TextField\n          onChange={handleChangeName}\n          value={data.name}\n          label=\"Введите имя\"\n          variant=\"outlined\"\n          onKeyDown={handleKeyDown}\n          fullWidth\n          autoFocus\n        />\n      </Box>\n      <Box flexShrink={0} mr={-2}>\n        <IconButton onClick={() => onDelete(data.id)} disabled={cannotDelete}>\n          <DeleteIcon />\n        </IconButton>\n      </Box>\n    </Box>\n  );\n};\n","import React from \"react\";\nimport { useStore } from \"effector-react\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nimport { addPlayer, deletePlayer, editPlayer, $players } from \"../model\";\nimport { PlayerField } from \"./PlayerField\";\n\nexport const AddPlayersStep = () => {\n  const players = useStore($players);\n\n  return (\n    <>\n      <Box mb={3}>\n        {players.map((player, ind) => {\n          const isLast = ind === players.length - 1;\n          return (\n            <Box key={player.id} mb={isLast ? 0 : 2}>\n              <PlayerField\n                data={player}\n                onChange={editPlayer}\n                onDelete={deletePlayer}\n                onEnter={() => addPlayer()}\n                cannotDelete={players.length <= 1}\n              />\n            </Box>\n          );\n        })}\n      </Box>\n\n      <Box display=\"flex\" justifyContent=\"center\">\n        <Button\n          onClick={() => addPlayer()}\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n          startIcon={<AddIcon />}\n        >\n          Добавить игрока\n        </Button>\n      </Box>\n    </>\n  );\n};\n","import React, { ChangeEvent } from \"react\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\n\nimport { changeMaster, $master, $players } from \"../model\";\nimport { useStore } from \"effector-react\";\n\nexport const ChooseMasterStep = () => {\n  const master = useStore($master);\n  const players = useStore($players);\n\n  return (\n    <RadioGroup\n      value={master}\n      onChange={({ target: { value } }: ChangeEvent<HTMLInputElement>) =>\n        changeMaster(value)\n      }\n    >\n      {players.map((player) => {\n        return (\n          <FormControlLabel\n            key={player.id}\n            value={player.id}\n            control={<Radio />}\n            label={player.name}\n          />\n        );\n      })}\n    </RadioGroup>\n  );\n};\n","import React from \"react\";\nimport cx from \"classnames\";\nimport { useStore } from \"effector-react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { green } from \"@material-ui/core/colors\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nimport { $players, $master } from \"../model\";\n\nexport const FinishStep = () => {\n  const players = useStore($players);\n  const master = useStore($master);\n  const classes = useStyles();\n\n  return (\n    <List>\n      {players.map((player) => {\n        const isMaster = player.id === master;\n        const namesFirstLetter = player.name[0] || \"\";\n\n        return (\n          <ListItem key={player.id} disableGutters>\n            <ListItemAvatar>\n              <Avatar className={cx({ [classes.masterAvatar]: isMaster })}>\n                {namesFirstLetter.toUpperCase()}\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText\n              primary={player.name}\n              secondary={isMaster && \"Ведущий\"}\n            />\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n};\n\nconst useStyles = makeStyles({\n  masterAvatar: {\n    backgroundColor: green[400],\n  },\n});\n","import React from \"react\";\nimport { useStore } from \"effector-react\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel, { StepLabelProps } from \"@material-ui/core/StepLabel\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport {\n  nextStepRequest,\n  prevStepRequest,\n  $activeStep,\n  $formError,\n  steps,\n} from \"../model\";\nimport { AddPlayersStep } from \"./AddPlayersStep\";\nimport { ChooseMasterStep } from \"./ChooseMasterStep\";\nimport { FinishStep } from \"./FinishStep\";\n\nexport const PlayersForm = () => {\n  const activeStep = useStore($activeStep);\n  const error = useStore($formError);\n  const isFirstStep = activeStep === 0;\n  const isLastStep = activeStep === steps.length - 1;\n\n  return (\n    <Paper>\n      <Stepper activeStep={activeStep}>\n        {steps.map((label, index) => {\n          const labelProps: StepLabelProps = {};\n\n          if (index === activeStep && error) {\n            labelProps.optional = (\n              <Typography variant=\"caption\" color=\"error\">\n                {error}\n              </Typography>\n            );\n            labelProps.error = true;\n          }\n          return (\n            <Step key={label}>\n              <StepLabel {...labelProps}>{label}</StepLabel>\n            </Step>\n          );\n        })}\n      </Stepper>\n\n      <Box pb={3} px={4}>\n        {activeStep === 0 && <AddPlayersStep />}\n        {activeStep === 1 && <ChooseMasterStep />}\n        {activeStep === 2 && <FinishStep />}\n      </Box>\n\n      <Divider />\n\n      <Box width={1} px={3} py={2}>\n        <Button disabled={isFirstStep} onClick={() => prevStepRequest()}>\n          Назад\n        </Button>\n        <Button\n          onClick={({ currentTarget }) => {\n            nextStepRequest();\n            currentTarget.blur();\n          }}\n        >\n          {isLastStep ? \"Завершить\" : \"Вперед\"}\n        </Button>\n      </Box>\n    </Paper>\n  );\n};\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport { PlayersForm } from \"./PlayersForm\";\n\nexport const AddPlayers = () => {\n  return (\n    <Grid justify=\"center\" container>\n      <Grid item xs={6}>\n        <PlayersForm />\n      </Grid>\n    </Grid>\n  );\n};\n","import React, { ReactNode, useRef, useState, useEffect } from \"react\";\nimport Typography, { TypographyProps } from \"@material-ui/core/Typography\";\n\ntype Props = TypographyProps & {\n  count?: number;\n  step?: number;\n  onFinish?: () => void;\n  component?: ReactNode;\n};\n\nexport const Countdown = ({\n  count = 3,\n  step = 1000,\n  onFinish,\n  ...rest\n}: Props) => {\n  const [remained, setRemained] = useState(count);\n  const remainedRef = useRef(remained);\n\n  remainedRef.current = remained;\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      const newRemained = remainedRef.current - 1;\n\n      if (newRemained > 0) {\n        setRemained(newRemained);\n        return;\n      }\n\n      if (onFinish) {\n        onFinish();\n      }\n\n      clearInterval(timer);\n    }, step);\n\n    return () => {\n      clearInterval(timer);\n    };\n  }, []); // eslint-disable-line\n\n  return <Typography {...rest}>{remained}</Typography>;\n};\n","import React, { FC, ReactNode, useEffect, useCallback, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport Box from \"@material-ui/core/Box\";\n\nimport { Countdown } from \"components/Countdown\";\n\ntype Props = {\n  onHideSecret: () => void;\n  title?: ReactNode;\n};\n\nexport const DisplaySecret: FC<Props> = ({ title, onHideSecret, children }) => {\n  const [isSecretVisible, setIsSecretVisible] = useState(false);\n  const [isCountdownVisible, setIsCountdownVisible] = useState(false);\n\n  const handleChangeState = useCallback(() => {\n    if (!isSecretVisible) {\n      setIsCountdownVisible(true);\n    } else {\n      setIsSecretVisible(false);\n      onHideSecret();\n    }\n  }, [isSecretVisible, onHideSecret]);\n\n  const handleCountdownFinish = () => {\n    setIsCountdownVisible(false);\n    setIsSecretVisible(true);\n  };\n\n  useEffect(() => {\n    const hadleKeyDown = (e: KeyboardEvent) => {\n      e.preventDefault();\n      handleChangeState();\n    };\n\n    window.removeEventListener(\"keydown\", hadleKeyDown);\n    window.addEventListener(\"keydown\", hadleKeyDown);\n\n    return () => {\n      window.removeEventListener(\"keydown\", hadleKeyDown);\n    };\n  }, [handleChangeState]);\n\n  const classes = useStyles();\n\n  return (\n    <Backdrop className={classes.root} onClick={handleChangeState} open>\n      <Box\n        display=\"flex\"\n        color=\"#fff\"\n        width=\"100%\"\n        height=\"100%\"\n        alignItems=\"center\"\n        position=\"relative\"\n      >\n        <Container>\n          <Box\n            display=\"flex\"\n            alignItems=\"center\"\n            flexDirection=\"column\"\n            textAlign=\"center\"\n          >\n            {!!title && (\n              <Typography variant=\"h2\" component=\"h3\" gutterBottom>\n                {title}\n              </Typography>\n            )}\n            {isCountdownVisible && (\n              <Countdown\n                variant=\"h1\"\n                component=\"div\"\n                color=\"inherit\"\n                onFinish={handleCountdownFinish}\n              />\n            )}\n            {isSecretVisible && children}\n          </Box>\n        </Container>\n\n        {!isCountdownVisible && (\n          <Box\n            position=\"absolute\"\n            bottom=\"0\"\n            left=\"0\"\n            width=\"100%\"\n            justifyContent=\"center\"\n            textAlign=\"center\"\n            p={2}\n          >\n            <Typography>НАЖМИТЕ ЛЮБУЮ КНОПКУ</Typography>\n          </Box>\n        )}\n      </Box>\n    </Backdrop>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    zIndex: theme.zIndex.modal,\n  },\n}));\n","import React, { FC } from \"react\";\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\n\ntype Props = {\n  backgroundColor: string;\n  color: string;\n  text: string;\n};\n\nexport const Card: FC<Props> = ({ backgroundColor, color, text, children }) => {\n  const classes = useStyles({ backgroundColor, color });\n\n  return (\n    <Paper className={classes.root}>\n      <Typography variant=\"h2\" component=\"h3\">\n        {text}\n      </Typography>\n    </Paper>\n  );\n};\n\nconst useStyles = makeStyles<Theme, { backgroundColor: string; color: string }>(\n  {\n    root: ({ backgroundColor, color }) => {\n      return {\n        display: \"flex\",\n        width: \"500px\",\n        height: \"250px\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        backgroundColor,\n        color,\n        textTransform: \"uppercase\",\n      };\n    },\n  }\n);\n","import React from \"react\";\nimport { useTheme, Theme } from \"@material-ui/core/styles\";\nimport { red, green } from \"@material-ui/core/colors\";\n\nimport { Card } from \"components/Card\";\nimport { Role, roles, roleNames } from \"shared/roles\";\n\ntype Props = {\n  role: Role;\n};\n\nconst getColorsMap = (theme: Theme) => ({\n  [roles.helper]: [green[700], \"#fff\"],\n  [roles.traitor]: [red[900], \"#fff\"],\n  [roles.regular]: [theme.palette.grey[200], theme.palette.text.primary],\n});\n\nexport const RoleCard = ({ role }: Props) => {\n  const theme = useTheme();\n  const [backgroundColor, color] = getColorsMap(theme)[role];\n\n  return (\n    <Card\n      text={roleNames[role]}\n      backgroundColor={backgroundColor}\n      color={color}\n    />\n  );\n};\n","import { createEvent } from \"effector\";\n\nexport const changePlayerRequest = createEvent(\"change player request\");\nexport const playerChanged = createEvent(\"player changed\");\n","import { createEvent } from \"effector\";\n\nimport { MarkerType } from \"shared/markerTypes\";\n\nexport const setWord = createEvent<string>(\"set word\");\n\ntype GiveMarkerToPlayer = {\n  playerId: string;\n  markerType: MarkerType;\n};\n\nexport const giveMarkerToPlayerRequest = createEvent<GiveMarkerToPlayer>(\n  \"give marker to player request\"\n);\n\nexport const markerGivenToPlayer = createEvent<GiveMarkerToPlayer>(\n  \"marker given to player request\"\n);\n\nexport const minusRemainedMarker = createEvent<MarkerType>(\n  \"minus remained marker\"\n);\n\nexport const startNewGame = createEvent(\"start new game\");\n","import { ValuesType } from \"utility-types\";\n\nexport const markerTypes = {\n  no: \"no\",\n  yes: \"yes\",\n  maybe: \"maybe\",\n  soFar: \"so far\",\n  soClose: \"so close\",\n  correct: \"correct\",\n} as const;\n\nexport type MarkerType = ValuesType<typeof markerTypes>;\n\nexport const markerNames = {\n  [markerTypes.no]: \"Нет\",\n  [markerTypes.yes]: \"Да\",\n  [markerTypes.maybe]: \"Возможно\",\n  [markerTypes.soFar]: \"Очень далеко\",\n  [markerTypes.soClose]: \"Очень близко\",\n  [markerTypes.correct]: \"Правильно\",\n} as const;\n","import { createStore, guard, sample } from \"effector\";\n\nimport { markerTypes } from \"shared/markerTypes\";\nimport {\n  MAYBE_MARKERS,\n  YES_NO_MARKERS,\n  SO_CLOSE_FAR_MARKERS,\n} from \"shared/config\";\n\nimport {\n  setWord,\n  giveMarkerToPlayerRequest,\n  minusRemainedMarker,\n  markerGivenToPlayer,\n  startNewGame,\n} from \"./events\";\nimport { RemainedMarkers, MarkersByPlayer } from \"./types\";\n\nexport const $word = createStore<string>(\"\")\n  .on(setWord, (_, word) => word)\n  .on(startNewGame, () => \"\");\n\nconst initialRemainedMarkers = {\n  [markerTypes.correct]: 1,\n  [markerTypes.maybe]: MAYBE_MARKERS,\n  [markerTypes.no]: YES_NO_MARKERS,\n  [markerTypes.yes]: YES_NO_MARKERS,\n  [markerTypes.soClose]: SO_CLOSE_FAR_MARKERS,\n  [markerTypes.soFar]: SO_CLOSE_FAR_MARKERS,\n};\n\nexport const $remainedMarkers = createStore<RemainedMarkers>(\n  initialRemainedMarkers\n)\n  .on(minusRemainedMarker, (state, type) => {\n    const currentVal = state[type];\n    const newVal = currentVal - 1;\n\n    if (newVal < 0) {\n      return state;\n    }\n\n    if (type === markerTypes.yes || type === markerTypes.no) {\n      return {\n        ...state,\n        [markerTypes.yes]: newVal,\n        [markerTypes.no]: newVal,\n      };\n    }\n\n    return {\n      ...state,\n      [type]: newVal,\n    };\n  })\n  .on(startNewGame, () => initialRemainedMarkers);\n\nguard({\n  source: giveMarkerToPlayerRequest,\n  filter: ({ markerType }) => {\n    const remainedMarkers = $remainedMarkers.getState();\n    const markerTypeRemained = remainedMarkers[markerType];\n\n    return markerTypeRemained > 0;\n  },\n  target: markerGivenToPlayer,\n});\n\nexport const $markersByPlayer = createStore<MarkersByPlayer>({})\n  .on(markerGivenToPlayer, (state, { playerId, markerType }) => {\n    const playerMarkers = state[playerId] || {};\n    const markerCount = playerMarkers[markerType] || 0;\n\n    return {\n      ...state,\n      [playerId]: {\n        ...playerMarkers,\n        [markerType]: markerCount + 1,\n      },\n    };\n  })\n  .on(startNewGame, () => ({}));\n\nsample({\n  source: markerGivenToPlayer,\n  fn: ({ markerType }) => markerType,\n  target: minusRemainedMarker,\n});\n","import { createStore, combine, guard } from \"effector\";\n\nimport { $players } from \"model/players\";\nimport { startNewGame } from \"model/game\";\nimport { nextScreenRequest } from \"model/routing\";\n\nimport { playerChanged, changePlayerRequest } from \"./events\";\n\nexport const $currentPlayerIndex = createStore(0)\n  .on(playerChanged, (index) => index + 1)\n  .on(startNewGame, () => 0);\n\nconst $playersLength = $players.map((players) => players.length);\n\nguard({\n  source: changePlayerRequest,\n  filter: combine([$currentPlayerIndex, $playersLength]).map(\n    ([index, length]) => index >= length - 1\n  ),\n  target: nextScreenRequest,\n});\n\nguard({\n  source: changePlayerRequest,\n  filter: combine([$currentPlayerIndex, $playersLength]).map(\n    ([index, length]) => index < length - 1\n  ),\n  target: playerChanged,\n});\n\nexport const $currentPlayer = combine(\n  $currentPlayerIndex,\n  $players,\n  (index, players) => players[index]\n);\n","import React from \"react\";\nimport { useStore } from \"effector-react\";\n\nimport { DisplaySecret } from \"components/DisplaySecret\";\n\nimport { RoleCard } from \"./RoleCard\";\nimport { $currentPlayer, changePlayerRequest } from \"./model\";\n\nexport const ShowRoles = () => {\n  const player = useStore($currentPlayer);\n\n  if (!player) {\n    return null;\n  }\n\n  return (\n    <DisplaySecret\n      title={player.name}\n      onHideSecret={() => changePlayerRequest()}\n    >\n      <RoleCard role={player.role} />\n    </DisplaySecret>\n  );\n};\n","import { createEvent } from \"effector\";\n\nexport const changeIndexRequest = createEvent(\"change index request\");\nexport const indexChanged = createEvent(\"index changed\");\n","import { createStore, guard } from \"effector\";\n\nimport { nextScreenRequest } from \"model/routing\";\nimport { startNewGame } from \"model/game\";\nimport { roleNames, roles } from \"shared/roles\";\n\nimport { indexChanged, changeIndexRequest } from \"./events\";\n\nexport const $showToIndex = createStore(0)\n  .on(indexChanged, (index) => index + 1)\n  .on(startNewGame, () => 0);\n\nconst showTo = [roleNames[roles.traitor], roleNames[roles.helper]];\n\nguard({\n  source: changeIndexRequest,\n  filter: $showToIndex.map((index) => index >= showTo.length - 1),\n  target: nextScreenRequest,\n});\n\nguard({\n  source: changeIndexRequest,\n  filter: $showToIndex.map((index) => index < showTo.length - 1),\n  target: indexChanged,\n});\n\nexport const $showTo = $showToIndex.map((index) => showTo[index]);\n","import React from \"react\";\nimport { useStore } from \"effector-react\";\nimport Box from \"@material-ui/core/Box\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nimport { DisplaySecret } from \"components/DisplaySecret\";\nimport { Card } from \"components/Card\";\nimport { $word } from \"model/game\";\n\nimport { $showTo, changeIndexRequest } from \"./model\";\n\nexport const ShowWord = () => {\n  const showTo = useStore($showTo);\n  const word = useStore($word);\n  const theme = useTheme();\n\n  return (\n    <DisplaySecret\n      title={\n        <>\n          Слово смотрит{\" \"}\n          <Box display=\"block\" fontWeight=\"bold\">\n            {showTo.toLowerCase()}\n          </Box>\n        </>\n      }\n      onHideSecret={() => changeIndexRequest()}\n    >\n      <Card\n        backgroundColor={theme.palette.grey[200]}\n        color={theme.palette.text.primary}\n        text={word}\n      />\n    </DisplaySecret>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport {\n  purple,\n  lightBlue,\n  green,\n  pink,\n  indigo,\n  deepOrange,\n} from \"@material-ui/core/colors\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport Box from \"@material-ui/core/Box\";\n\ntype Props = {\n  words: string[];\n  onChooseWord: (word: string) => void;\n};\n\nconst colors = [lightBlue, purple, green, pink, deepOrange, indigo].map(\n  (c) => c[100]\n);\nconst colorsNum = colors.length;\n\nexport const WordsList = ({ words, onChooseWord }: Props) => {\n  // const classes = useStyles();\n  return (\n    <GridList cols={3}>\n      {words.map((word, index) => (\n        <GridListTile key={word}>\n          <Card\n            display=\"flex\"\n            width=\"100%\"\n            height=\"100%\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n            bgcolor={colors[index % colorsNum]}\n          >\n            <Box\n              p={3}\n              display=\"flex\"\n              width=\"100%\"\n              component={ButtonBase}\n              height=\"100%\"\n              onClick={() => {\n                onChooseWord(word);\n              }}\n            >\n              <Box\n                fontSize=\"h4.fontSize\"\n                letterSpacing=\"0.005em\"\n                color=\"text.primary\"\n                component=\"span\"\n              >\n                {word.toUpperCase()}\n              </Box>\n            </Box>\n          </Card>\n        </GridListTile>\n      ))}\n    </GridList>\n  );\n};\n\nconst Card = styled(Box)`\n  position: relative;\n\n  &::before {\n    content: \"\";\n\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n\n    background-color: rgba(255, 255, 255, 0.2);\n    opacity: 0;\n\n    transition: opacity 0.3s;\n\n    pointer-events: none;\n  }\n\n  &:hover {\n    &::before {\n      opacity: 1;\n    }\n  }\n`;\n","import { createEvent, forward } from \"effector\";\n\nimport { setWord } from \"model/game\";\nimport { nextScreenRequest } from \"model/routing\";\n\nexport const onChooseWord = createEvent<string>(\"on choose word\");\n\nforward({\n  from: onChooseWord,\n  to: setWord,\n});\n\nforward({\n  from: onChooseWord,\n  to: nextScreenRequest,\n});\n","import React, { useRef } from \"react\";\n\nimport { getRandomElements } from \"libs/getRandomElements\";\nimport { WordsList } from \"components/WordsList\";\nimport { WORDS_FOR_CHOOSING } from \"shared/config\";\n\nimport { onChooseWord } from \"./model\";\nimport dictionary from \"./words.json\";\n\nexport const ChooseWord = () => {\n  const words = useRef(getRandomElements(dictionary, WORDS_FOR_CHOOSING));\n\n  return <WordsList words={words.current} onChooseWord={onChooseWord} />;\n};\n","export const getRandomElements = (arr: any[], n: number) => {\n  const result = [];\n  let len = arr.length;\n  const taken = new Array(len);\n\n  if (n > len) {\n    throw new RangeError(\n      \"getRandomElements: more elements taken than available\"\n    );\n  }\n\n  for (let i = 0; i < n; i++) {\n    const x = Math.floor(Math.random() * len);\n\n    result[i] = arr[x in taken ? taken[x] : x];\n    taken[x] = --len in taken ? taken[len] : len;\n  }\n\n  return result;\n};\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M3.243 4.733a7.1 7.1 0 01-.004-.185c0-.243.034-.452.103-.628.05-.133.132-.266.244-.402.082-.099.231-.242.444-.43.215-.19.353-.34.418-.453a.72.72 0 00.096-.367.86.86 0 00-.281-.634.956.956 0 00-.69-.273.928.928 0 00-.66.247c-.177.165-.291.423-.347.774l-.635-.076c.058-.47.228-.83.51-1.079.283-.25.656-.374 1.12-.374.493 0 .886.134 1.179.402.293.268.44.591.44.972 0 .22-.052.422-.156.607-.103.185-.303.412-.603.677-.202.179-.333.31-.395.395a.88.88 0 00-.137.292c-.03.11-.047.288-.052.535h-.594zm-.038 1.24V5.27h.704v.704h-.704z\",\n  fillRule: \"nonzero\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h6.827v6.827H0z\"\n});\n\nvar SvgQuestion = function SvgQuestion(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 6.827 6.827\",\n    shapeRendering: \"geometricPrecision\",\n    textRendering: \"geometricPrecision\",\n    imageRendering: \"optimizeQuality\",\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgQuestion, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/question.ae391e95.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\nimport SvgIcon, { SvgIconProps } from \"@material-ui/core/SvgIcon\";\n\nimport { ReactComponent as QuestionIconSvg } from \"./svg/question.svg\";\n\nexport const QuestionIcon = (props: SvgIconProps) => {\n  return (\n    <SvgIcon {...props} viewBox=\"0 0 6.827 6.827\" component={QuestionIconSvg} />\n  );\n};\n","import React, { ComponentType } from \"react\";\nimport { makeStyles, useTheme, Theme } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport { yellow } from \"@material-ui/core/colors\";\nimport { SvgIconProps } from \"@material-ui/core/SvgIcon\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport ThumbDownIcon from \"@material-ui/icons/ThumbDown\";\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\nimport StarIcon from \"@material-ui/icons/Star\";\n\nimport { markerTypes, MarkerType } from \"shared/markerTypes\";\n\nimport { QuestionIcon } from \"../Icons\";\n\nexport const markerSizeMap = {\n  l: 48,\n  md: 32,\n  sm: 24,\n};\n\nconst iconSizeMap = {\n  l: 32,\n  md: 24,\n  sm: 16,\n};\n\ntype Size = \"l\" | \"md\" | \"sm\";\n\ntype AllMarkersProps = {\n  size?: Size;\n} & (\n  | { button: true; onClick: () => void }\n  | { button?: false; onClick?: never }\n);\n\ntype MarkerBaseProps = AllMarkersProps & {\n  bgColor: string;\n  hoverColor: string;\n  iconColor?: string;\n  iconComponent: ComponentType<SvgIconProps>;\n  size?: Size;\n};\n\nexport const MarkerBase = ({\n  iconComponent: Icon,\n  iconColor = \"#fff\",\n  size = \"l\",\n  button = false,\n  onClick,\n  bgColor,\n  hoverColor,\n}: MarkerBaseProps) => {\n  const markerSize = markerSizeMap[size];\n  const iconSize = iconSizeMap[size];\n  const classes = useStyles({ button, root: { bgColor, hoverColor } });\n\n  return (\n    <Box\n      display=\"flex\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      borderRadius=\"50%\"\n      width={markerSize}\n      height={markerSize}\n      boxShadow={2}\n      color={iconColor}\n      fontSize={iconSize}\n      component={button ? ButtonBase : \"div\"}\n      onClick={onClick}\n      className={classes.root}\n    >\n      <Icon color=\"inherit\" fontSize=\"inherit\" />\n    </Box>\n  );\n};\n\nexport const YesMarker = (props: AllMarkersProps) => {\n  const theme = useTheme();\n\n  return (\n    <MarkerBase\n      {...props}\n      iconComponent={CheckIcon}\n      bgColor={theme.palette.success.light}\n      hoverColor={theme.palette.success.main}\n    />\n  );\n};\n\nexport const NoMarker = (props: AllMarkersProps) => {\n  const theme = useTheme();\n\n  return (\n    <MarkerBase\n      {...props}\n      iconComponent={CloseIcon}\n      bgColor={theme.palette.error.light}\n      hoverColor={theme.palette.error.main}\n    />\n  );\n};\n\nexport const MaybeMarker = (props: AllMarkersProps) => {\n  const theme = useTheme();\n\n  return (\n    <MarkerBase\n      {...props}\n      iconComponent={QuestionIcon}\n      bgColor={theme.palette.info.light}\n      hoverColor={theme.palette.info.main}\n    />\n  );\n};\n\nexport const SoFarMarker = (props: AllMarkersProps) => {\n  const theme = useTheme();\n\n  return (\n    <MarkerBase\n      {...props}\n      iconComponent={ThumbDownIcon}\n      bgColor={theme.palette.warning.main}\n      hoverColor={theme.palette.warning.dark}\n    />\n  );\n};\n\nexport const SoCloseMarker = (props: AllMarkersProps) => {\n  const theme = useTheme();\n\n  return (\n    <MarkerBase\n      {...props}\n      iconComponent={ThumbUpIcon}\n      bgColor={theme.palette.primary.light}\n      hoverColor={theme.palette.primary.main}\n    />\n  );\n};\n\nexport const CorrectMarker = (props: AllMarkersProps) => {\n  return (\n    <MarkerBase\n      {...props}\n      iconComponent={StarIcon}\n      bgColor={yellow[700]}\n      hoverColor={yellow[800]}\n    />\n  );\n};\n\nconst markersMap = {\n  [markerTypes.yes]: YesMarker,\n  [markerTypes.no]: NoMarker,\n  [markerTypes.maybe]: MaybeMarker,\n  [markerTypes.soFar]: SoFarMarker,\n  [markerTypes.soClose]: SoCloseMarker,\n  [markerTypes.correct]: CorrectMarker,\n};\n\nexport type Props = AllMarkersProps & {\n  type: MarkerType;\n};\n\nexport const Marker = ({ type, ...rest }: Props) => {\n  const MarkerComponent = markersMap[type];\n  return <MarkerComponent {...rest} />;\n};\n\nconst useStyles = makeStyles<\n  Theme,\n  { root: { bgColor: string; hoverColor: string }; button: boolean }\n>({\n  root: ({ root: { bgColor, hoverColor }, button }) => ({\n    backgroundColor: bgColor,\n    borderRadius: \"50%\",\n    transition: \"background-color 0.3s\",\n\n    \"&:hover\": {\n      backgroundColor: button ? hoverColor : bgColor,\n    },\n  }),\n});\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\n\nimport { Marker, MarkerProps, markerSizeMap } from \"../Marker\";\n\ntype Props = MarkerProps & {\n  count: number;\n};\n\nexport const MarkersList = ({ size = \"l\", type, count }: Props) => {\n  const markerSize = markerSizeMap[size];\n  const markerShift = markerSize / 4;\n\n  return (\n    <Box display=\"flex\" flexWrap=\"wrap\" pl={`${markerShift}px`}>\n      {[...new Array(count)].map((_, index) => {\n        return (\n          <Box key={index} ml={`-${markerShift}px`}>\n            <Marker type={type} size={size} />\n          </Box>\n        );\n      })}\n    </Box>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport { markerNames, MarkerType } from \"shared/markerTypes\";\nimport { useHover } from \"libs/useHover\";\n\nimport { Marker } from \"../Marker\";\nimport { MarkersList } from \"../MarkersList\";\n\ntype Props = {\n  name: string;\n  markers: { type: MarkerType; count: number }[];\n  availableMarkers: MarkerType[];\n  onAddMarker: (type: MarkerType) => void;\n};\n\nexport const PlayerCard = ({\n  name,\n  markers,\n  onAddMarker,\n  availableMarkers,\n}: Props) => {\n  const { isHovered, setIsHovered, handlers } = useHover();\n  const handleAddMarker = (markerType: MarkerType) => {\n    setIsHovered(false);\n    onAddMarker(markerType);\n  };\n  const hasMarkers = markers.length > 0;\n\n  return (\n    <Root {...handlers}>\n      <Box px={4} py={2}>\n        <Typography variant=\"h3\">{name}</Typography>\n      </Box>\n\n      {hasMarkers && (\n        <>\n          <Divider />\n\n          <Box px={4} py={2}>\n            {markers.map(({ type, count }, index) => {\n              const isLast = index === markers.length - 1;\n              return (\n                <Box key={type} display=\"flex\">\n                  <Box mr={2} py=\"2px\" mb={isLast ? 0 : 1}>\n                    <Typography variant=\"subtitle1\">\n                      {markerNames[type]}:\n                    </Typography>\n                  </Box>\n                  <Box>\n                    <MarkersList size=\"md\" type={type} count={count} />\n                  </Box>\n                </Box>\n              );\n            })}\n          </Box>\n        </>\n      )}\n\n      <ActionsWrapper isVisible={isHovered}>\n        <Grid justify=\"center\" spacing={1} container>\n          {availableMarkers.map((type) => {\n            return (\n              <Grid key={type} item>\n                <Marker\n                  type={type}\n                  onClick={() => handleAddMarker(type)}\n                  button\n                />\n              </Grid>\n            );\n          })}\n        </Grid>\n      </ActionsWrapper>\n    </Root>\n  );\n};\n\nconst ActionsWrapper = styled.div<{ isVisible: boolean }>`\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  background-color: rgba(0, 0, 0, 0.5);\n  opacity: ${(props) => (props.isVisible ? 1 : 0)};\n  pointer-events: ${(props) => (props.isVisible ? \"all\" : \"none\")};\n\n  transition: opacity 0.3s;\n`;\n\nconst Root = styled(Paper)`\n  position: relative;\n`;\n","import { useState } from \"react\";\n\nexport const useHover = () => {\n  const [isHovered, setIsHovered] = useState(false);\n  const onMouseEnter = () => {\n    setIsHovered(true);\n  };\n  const onMouseLeave = () => {\n    setIsHovered(false);\n  };\n\n  return {\n    isHovered,\n    setIsHovered,\n    handlers: {\n      onMouseEnter,\n      onMouseLeave,\n    },\n  };\n};\n","import { combine } from \"effector\";\nimport reduce from \"lodash/reduce\";\n\nimport { $remainedMarkers, $markersByPlayer } from \"model/game\";\nimport { $players } from \"model/players\";\nimport { MarkerType } from \"shared/markerTypes\";\n\nexport const $availableMarkers = $remainedMarkers.map((remainedMarkers) =>\n  reduce<typeof remainedMarkers, MarkerType[]>(\n    remainedMarkers,\n    (acc, count, markerType) => {\n      if (count > 0) {\n        acc.push(markerType as MarkerType);\n      }\n\n      return acc;\n    },\n    []\n  )\n);\n\nexport const $playersList = combine(\n  [$markersByPlayer, $players],\n  ([markersByPlayer, players]) => {\n    return players.map((player) => {\n      const playerMarkers = markersByPlayer[player.id];\n      return {\n        ...player,\n        markers: reduce<\n          typeof playerMarkers,\n          { type: MarkerType; count: number }[]\n        >(\n          playerMarkers,\n          (acc, count, type) => {\n            acc.push({ type: type as MarkerType, count });\n            return acc;\n          },\n          []\n        ),\n      };\n    });\n  }\n);\n\nexport const $remainedAnswersNum = $remainedMarkers.map((state) => state.yes);\n","import { createEvent, forward } from \"effector\";\n\nimport { startNewGame } from \"model/game\";\nimport { setScreen, ScreensEnum } from \"model/routing\";\n\nexport const onStartNewGame = createEvent(\"on start new game\");\n\nforward({\n  from: onStartNewGame,\n  to: [startNewGame, setScreen.prepend(() => ScreensEnum.addPlayers)],\n});\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport { useStore } from \"effector-react\";\n\nimport { PlayerCard } from \"components/PlayerCard\";\nimport { giveMarkerToPlayerRequest } from \"model/game\";\n\nimport {\n  $playersList,\n  $availableMarkers,\n  $remainedAnswersNum,\n  onStartNewGame,\n} from \"./model\";\n\nexport const GameBoard = () => {\n  const players = useStore($playersList);\n  const availableMarkers = useStore($availableMarkers);\n  const remainedAnswersNum = useStore($remainedAnswersNum);\n\n  return (\n    <>\n      <Grid spacing={2} container>\n        {players.map((player) => (\n          <Grid key={player.id} xs={4} item>\n            <PlayerCard\n              onAddMarker={(markerType) => {\n                giveMarkerToPlayerRequest({ markerType, playerId: player.id });\n              }}\n              availableMarkers={availableMarkers}\n              name={player.name}\n              markers={player.markers}\n            />\n          </Grid>\n        ))}\n      </Grid>\n\n      <Box mt={2}>\n        <Typography>Осталось вопросов: {remainedAnswersNum}</Typography>\n      </Box>\n\n      <Box mt={2} display=\"flex\" justifyContent=\"center\">\n        <Button variant=\"outlined\" onClick={() => onStartNewGame()}>\n          Начать новую игру\n        </Button>\n      </Box>\n    </>\n  );\n};\n","import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Box from \"@material-ui/core/Box\";\nimport { useStore } from \"effector-react\";\n\nimport { AddPlayers } from \"screens/AddPlayers\";\nimport { ShowRoles } from \"screens/ShowRoles\";\nimport { ShowWord } from \"screens/ShowWord\";\nimport { ChooseWord } from \"screens/ChooseWord\";\nimport { GameBoard } from \"screens/GameBoard\";\nimport { ScreensEnum, $currentScreenIndex } from \"model/routing\";\n\nfunction App() {\n  const currentScreen = useStore($currentScreenIndex);\n  const isAddPlayers =\n    currentScreen === ScreensEnum.addPlayers ||\n    currentScreen === ScreensEnum.showRoles;\n  const isChooseWord = currentScreen === ScreensEnum.chooseWord;\n\n  return (\n    <Container>\n      <Box my={4}>\n        {isAddPlayers && <AddPlayers />}\n        {isChooseWord && <ChooseWord />}\n        {!isAddPlayers && !isChooseWord && <GameBoard />}\n        {currentScreen === ScreensEnum.showRoles && <ShowRoles />}\n        {currentScreen === ScreensEnum.showWord && <ShowWord />}\n      </Box>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider } from \"styled-components\";\nimport {\n  StylesProvider,\n  ThemeProvider as MuiThemeProvider,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst theme = createMuiTheme();\n\nReactDOM.render(\n  <React.StrictMode>\n    <StylesProvider injectFirst>\n      <MuiThemeProvider theme={theme}>\n        <ThemeProvider theme={theme}>\n          <>\n            <CssBaseline />\n            <App />\n          </>\n        </ThemeProvider>\n      </MuiThemeProvider>\n    </StylesProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}